// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id          String      @default(nanoid(8)) @id
  name        String
  password    String
  email       String      @unique
  validate    Boolean     @default(false)
  comments    Comment[]
  projects    Project[]
  tasks       Task[]
  tickets     Ticket[]
  assignment  Assignment[]
}

model Project {
  id          String      @default(nanoid(8)) @id
  name        String
  status      String      @default("new")
  version     String      @default("0.1.0")
  created     DateTime    @default(now())
  description String      @db.LongText
  tasks       Task[]
  comments    Comment[]
  owner       User        @relation(fields: [ownerId], references: [id])
  ownerId     String
  assignment  Assignment[]
}

model Task {
  id          String      @default(nanoid(8)) @id
  created     DateTime    @default(now())
  name        String
  status      String      @default("new")
  description String
  project     Project     @relation(fields: [projectId], references: [id])
  projectId   String
  comments    Comment[]
  tickets     Ticket[]
  owner       User        @relation(fields: [ownerId], references: [id])
  ownerId     String
}

model Ticket {
  id          String      @default(nanoid(8)) @id
  name        String
  status      String      @default("new")
  description String
  task        Task        @relation(fields: [taskId], references: [id])
  taskId      String
  comments    Comment[]
  owner       User        @relation(fields: [ownerId], references: [id])
  ownerId     String
}

model Comment {
  id          String      @default(nanoid(8)) @id
  created     DateTime    @default(now())
  content     String      @db.LongText
  project     Project?    @relation(fields: [projectId], references: [id])
  projectId   String?
  task        Task?       @relation(fields: [taskId], references: [id])
  taskId      String?
  ticket      Ticket?     @relation(fields: [ticketId], references: [id])
  ticketId    String?
  author      User        @relation(fields: [authorId], references: [id])
  authorId    String
}

model Assignment {
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  project     Project     @relation(fields: [projectId], references: [id])
  projectId   String
  @@id([userId, projectId])
}